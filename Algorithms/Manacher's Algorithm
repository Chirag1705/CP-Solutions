class Solution {
public:
    string longestPalindrome(string s) {
        int n = s.size();
        vector<char>s1(2*n+1);
        vector<int>p(2*n+1);
        int i = 0;
        s1[i++] = '*';
        
        for(int j = 0; j < s.size(); j++){
            s1[i++] = s[j];
            s1[i++] = '*';
        }
                        
        int l = 0, r = 0;
        
        for(int j = 0; j < s1.size(); j++){
            int mir = 2*l - j;
            
            if(r > j)
                p[j] = min(p[mir], r - j);
            
            while ((j - p[j] - 1) >= 0 and (j + p[j] + 1) < s1.size() and s1[j + p[j] + 1] == s1[j - p[j] - 1]){
                p[j]++;
            }
            
            if(j+p[j] > r){
                l = j;
                r = j + p[j];
            }
        }
        
    }
};
